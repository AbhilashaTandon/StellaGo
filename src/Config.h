#include <cstdint>
#include <array>
#ifndef CONFIG_H
#define CONFIG_H
#define DEBUG true
#define PROFILE false
#define VERBOSE false

static constexpr auto BOARD_SIZE = 9;

static constexpr auto komi = 7.5f;

static constexpr auto NUM_POINTS = (BOARD_SIZE + 2) * (BOARD_SIZE + 2);
static constexpr uint16_t PASS = 0;   // on board edge
static constexpr uint16_t RESIGN = 1; // on board edge

static constexpr std::array<int, 441> point_weights = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -23, -14, -15, -15, -16, -17, -18, -19, -19, -19, -19, -19, -18, -16, -16, -15, -15, -14, -23, 0, 0, -14, 1, 5, 4, 3, 2, 0, -1, -2, -2, -2, -1, 0, 3, 4, 4, 4, 1, -14, 0, 0, -15, 6, 15, 16, 17, 15, 8, 8, 8, 8, 8, 8, 8, 16, 13, 19, 16, 5, -15, 0, 0, -16, 6, 23, 22, 13, 11, 7, 6, 6, 7, 6, 6, 7, 11, 11, 24, 18, 6, -15, 0, 0, -16, 4, 11, 10, 2, 4, 2, 2, 2, 2, 2, 2, 2, 4, 2, 10, 14, 4, -16, 0, 0, -17, 2, 15, 10, 5, 2, 1, 0, 0, 0, 0, 0, 1, 2, 4, 10, 16, 2, -16, 0, 0, -18, -1, 7, 6, 2, 1, 0, -1, -1, -1, -1, -1, 0, 1, 2, 7, 7, 0, -18, 0, 0, -19, -2, 7, 5, 2, 0, -1, -1, -1, -1, -1, -1, -1, 0, 2, 6, 8, -2, -19, 0, 0, -19, -2, 7, 6, 2, 0, -1, -1, -1, -2, -2, -1, -1, 0, 2, 6, 7, -2, -19, 0, 0, -19, -2, 7, 8, 2, 0, -1, -1, -2, -1, -2, -1, -1, 0, 2, 9, 8, -2, -19, 0, 0, -19, -2, 7, 5, 2, 0, -1, -1, -2, -2, -1, -1, -1, 0, 2, 5, 7, -2, -19, 0, 0, -19, -1, 7, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1, 0, 2, 6, 7, -2, -19, 0, 0, -18, 0, 7, 6, 2, 0, -1, -1, -1, -1, -1, -1, 0, 1, 3, 6, 7, -1, -18, 0, 0, -16, 2, 15, 10, 3, 1, 0, 0, 0, 0, 0, 0, 1, 2, 4, 10, 13, 1, -17, 0, 0, -16, 3, 17, 11, 2, 3, 2, 2, 2, 2, 2, 2, 2, 4, 3, 11, 13, 4, -16, 0, 0, -15, 4, 13, 24, 8, 10, 5, 5, 5, 8, 6, 6, 6, 10, 13, 19, 23, 4, -15, 0, 0, -16, 4, 14, 23, 10, 13, 8, 8, 8, 10, 9, 9, 8, 13, 15, 20, 14, 5, -15, 0, 0, -14, 0, 5, 5, 4, 2, -1, -2, -2, -2, -2, -1, 0, 2, 3, 4, 5, 1, -13, 0, 0, -22, -14, -15, -15, -16, -17, -18, -19, -19, -19, -18, -18, -18, -17, -16, -15, -15, -13, -22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

static constexpr std::array<int, 361> optimal_move_checking_order = {100, 340, 87, 353, 361, 88, 373, 79, 352, 101, 68, 318, 67, 77, 80, 143, 66, 69, 129, 297, 372, 122, 360, 374, 78, 89, 311, 332, 339, 351, 363, 371, 90, 98, 99, 108, 319, 331, 109, 121, 130, 142, 298, 310, 342, 350, 362, 367, 226, 368, 369, 70, 71, 72, 73, 74, 75, 76, 185, 214, 227, 341, 346, 364, 365, 366, 370, 91, 94, 97, 150, 163, 164, 171, 192, 206, 213, 234, 248, 255, 269, 276, 290, 65, 86, 92, 93, 95, 96, 102, 151, 184, 193, 205, 256, 268, 277, 289, 347, 348, 349, 45, 81, 131, 172, 235, 247, 343, 344, 345, 375, 381, 382, 395, 46, 57, 58, 59, 107, 111, 119, 123, 141, 309, 329, 333, 338, 354, 359, 383, 394, 47, 56, 288, 299, 317, 321, 330, 393, 48, 110, 112, 113, 114, 115, 116, 117, 118, 120, 128, 132, 140, 144, 152, 162, 173, 183, 194, 204, 215, 225, 236, 246, 257, 267, 278, 296, 308, 320, 322, 323, 324, 325, 326, 327, 328, 384, 392, 44, 60, 133, 139, 153, 161, 287, 300, 307, 312, 396, 49, 55, 134, 135, 136, 137, 138, 154, 160, 165, 174, 182, 195, 203, 216, 224, 237, 245, 258, 266, 275, 279, 286, 301, 302, 303, 304, 305, 306, 380, 391, 50, 54, 149, 155, 156, 157, 158, 159, 175, 176, 177, 178, 179, 180, 181, 196, 197, 198, 201, 202, 217, 218, 220, 222, 223, 238, 239, 242, 243, 244, 254, 259, 260, 261, 262, 263, 264, 265, 280, 281, 282, 283, 284, 285, 291, 385, 390, 51, 52, 53, 170, 186, 191, 199, 200, 207, 212, 219, 221, 228, 233, 240, 241, 249, 270, 386, 387, 388, 389, 397, 417, 23, 39, 43, 61, 379, 401, 24, 25, 37, 38, 64, 82, 103, 337, 355, 376, 402, 403, 415, 416, 26, 35, 36, 85, 106, 124, 145, 295, 316, 334, 358, 404, 414, 27, 127, 313, 405, 413, 28, 34, 148, 166, 274, 292, 406, 410, 411, 412, 29, 30, 31, 32, 33, 169, 187, 190, 208, 211, 229, 232, 250, 253, 271, 407, 408, 409, 400, 418, 22, 40};
// puts points with highest point weight at beginning

#endif